"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[162],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var o=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,o,n=function(e,t){if(null==e)return{};var a,o,n={},r=Object.keys(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var d=o.createContext({}),s=function(e){var t=o.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=s(e.components);return o.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,d=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(a),m=n,g=u["".concat(d,".").concat(m)]||u[m]||c[m]||r;return a?o.createElement(g,l(l({ref:t},p),{},{components:a})):o.createElement(g,l({ref:t},p))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,l=new Array(r);l[0]=u;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var s=2;s<r;s++)l[s]=a[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,a)}u.displayName="MDXCreateElement"},9390:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var o=a(7462),n=(a(7294),a(3905));const r={slug:"/",title:"Getting Started",sidebar_position:1},l="Blazored Modal Docs",i={unversionedId:"getting-started",id:"getting-started",title:"Getting Started",description:"Nuget",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/",permalink:"/Modal/",draft:!1,editUrl:"https://github.com/blazored/modal/tree/main/docs/docs/getting-started.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"/",title:"Getting Started",sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Usage",permalink:"/Modal/category/usage"}},d={},s=[{value:"Getting Started",id:"getting-started",level:2},{value:"Register Services",id:"register-services",level:3},{value:"Add Imports",id:"add-imports",level:3},{value:"Add CSS Reference",id:"add-css-reference",level:3},{value:"Add the CascadingBlazoredModal Component",id:"add-the-cascadingblazoredmodal-component",level:3},{value:"Displaying a modal",id:"displaying-a-modal",level:3}],p={toc:s};function c(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,o.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"blazored-modal-docs"},"Blazored Modal Docs"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Blazored.Modal/"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/v/blazored.modal.svg?logo=nuget",alt:"Nuget"})),"\n",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Blazored/Modal/issues"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/github/issues/Blazored/Modal?logo=github",alt:"Issues"})),"\n",(0,n.kt)("img",{parentName:"p",src:"https://img.shields.io/nuget/dt/Blazored.Modal?logo=nuget",alt:"Nuget"})),(0,n.kt)("p",null,"Blazored Modal is a powerful and customizable modal implementation for ",(0,n.kt)("a",{parentName:"p",href:"https://blazor.net"},"Blazor applications"),"."),(0,n.kt)("h2",{id:"getting-started"},"Getting Started"),(0,n.kt)("p",null,"The first step is to install the Blazored.Modal NuGet package into your project. You can install the package via the nuget package manager, just search for ",(0,n.kt)("em",{parentName:"p"},"Blazored.Modal"),". You can also install via powershell using the following command."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Install-Package Blazored.Modal\n")),(0,n.kt)("p",null,"Or via the dotnet CLI."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"dotnet add package Blazored.Modal\n")),(0,n.kt)("h3",{id:"register-services"},"Register Services"),(0,n.kt)("p",null,"Blazored Modal uses a service to coordinate modals. To register this service you need to add the following using statement and call to ",(0,n.kt)("inlineCode",{parentName:"p"},"AddBlazoredModal")," in your applications ",(0,n.kt)("inlineCode",{parentName:"p"},"Program.cs")," file."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"using Blazored.Modal;\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"builder.Services.AddBlazoredModal();\n")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"The above code assumes the use of top level statements. If your application is not using them, please add the call to ",(0,n.kt)("inlineCode",{parentName:"p"},"AddBlazoredModal")," where you're registering services for your app.")),(0,n.kt)("h3",{id:"add-imports"},"Add Imports"),(0,n.kt)("p",null,"To avoid having to add using statements for Blazored Modal to lots of components in your project, it's recommended that you add the following to your root ",(0,n.kt)("em",{parentName:"p"},"_Imports.razor")," file. This will make the following usings available to all component in that project."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-razor"},"@using Blazored.Modal\n@using Blazored.Modal.Services\n")),(0,n.kt)("h3",{id:"add-css-reference"},"Add CSS Reference"),(0,n.kt)("p",null,"Blazored Modal uses CSS isolation. If your application is already using CSS isolation then the styles for Modal will be included automatically and you can skip this step. However, if your application isn't using isolated CSS, you will need to add a reference to the CSS bundle. You can checkout the ",(0,n.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/aspnet/core/blazor/components/css-isolation?view=aspnetcore-6.0#css-isolation-bundling"},"Microsoft Docs")," for additional details."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-html"},'<link href="{YOUR APP ASSEMBLY NAME}.styles.css" rel="stylesheet">\n')),(0,n.kt)("h3",{id:"add-the-cascadingblazoredmodal-component"},"Add the CascadingBlazoredModal Component"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"<CascadingBlazoredModal />")," component cascades an instance of the ",(0,n.kt)("inlineCode",{parentName:"p"},"IModalService")," to all decendant components. This should be added to the root component of your application (usually ",(0,n.kt)("inlineCode",{parentName:"p"},"App.razor"),") wrapping the Router as per the example below."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-html"},'<CascadingBlazoredModal>\n    <Router AppAssembly="typeof(Program).Assembly">\n        ...\n    </Router>\n</CascadingBlazoredModal>\n')),(0,n.kt)("h3",{id:"displaying-a-modal"},"Displaying a modal"),(0,n.kt)("p",null,"In order to display a modal, you must define a cascading parameter on the component that will invoke the modal:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"[CascadingParameter] public IModalService Modal { get; set; } = default!;\n")),(0,n.kt)("p",null,"Once you have the cascading parameter setup, you can call the ",(0,n.kt)("inlineCode",{parentName:"p"},"Show")," method on the ",(0,n.kt)("inlineCode",{parentName:"p"},"IModalService")," passing in the title for the modal and the type of the component you want the modal to display. For example, if you have a component called ",(0,n.kt)("inlineCode",{parentName:"p"},"Movies")," that you want to display in a modal from the ",(0,n.kt)("inlineCode",{parentName:"p"},"Home")," component on a button click."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-html"},'@page "/"\n\n<h1>Hello, world!</h1>\n\nWelcome to Blazored Modal.\n\n<button @onclick="@(() => Modal.Show<Movies>("My Movies"))">View Movies</button>\n\n@code {\n    [CascadingParameter] public IModalService Modal { get; set; }\n}\n')))}c.isMDXComponent=!0}}]);